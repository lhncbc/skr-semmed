/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Mar 23 15:18:25 EST 2006 by MyEclipse Hibernate Tool.
 */
package gov.nih.nlm.semmed.model;

import java.io.Serializable;

/**
 * A class that represents a row in the CONCEPT table. 
 * You can customize the behavior of this class by editing the class, {@link Concept()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractConcept 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Long conceptId;

    /** The value of the conceptSemtypeSet one-to-many association. */
    private java.util.Set conceptSemtypeSet;
    
    /** The value of the conceptTranslationSet one-to-many association. */
    private java.util.Set conceptTranslationSet;    

    /** The value of the simple cui property. */
    private java.lang.String cui;

    /** The value of the simple type property. */
    private java.lang.String type;

    /** The value of the simple preferredName property. */
    private java.lang.String preferredName;

    /** The value of the simple ghr property. */
    private java.lang.String ghr;

    /** The value of the simple omim property. */
    private java.lang.String omim;

    /**
     * Simple constructor of AbstractConcept instances.
     */
    public AbstractConcept()
    {
    }

    /**
     * Constructor of AbstractConcept instances given a simple primary key.
     * @param conceptId
     */
    public AbstractConcept(java.lang.Long conceptId)
    {
        this.setConceptId(conceptId);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Long
     */
    public java.lang.Long getConceptId()
    {
        return conceptId;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param conceptId
     */
    public void setConceptId(java.lang.Long conceptId)
    {
        this.hashValue = 0;
        this.conceptId = conceptId;
    }

    /**
     * Return the value of the CUI column.
     * @return java.lang.String
     */
    public java.lang.String getCui()
    {
        return this.cui;
    }

    /**
     * Set the value of the CUI column.
     * @param cui
     */
    public void setCui(java.lang.String cui)
    {
        this.cui = cui;
    }

    /**
     * Return the value of the TYPE column.
     * @return java.lang.String
     */
    public java.lang.String getType()
    {
        return this.type;
    }

    /**
     * Set the value of the TYPE column.
     * @param type
     */
    public void setType(java.lang.String type)
    {
        this.type = type;
    }

    /**
     * Return the value of the PREFERRED_NAME column.
     * @return java.lang.String
     */
    public java.lang.String getPreferredName()
    {
        return this.preferredName;
    }

    /**
     * Set the value of the PREFERRED_NAME column.
     * @param preferredName
     */
    public void setPreferredName(java.lang.String preferredName)
    {
        this.preferredName = preferredName;
    }

    /**
     * Return the value of the GHR column.
     * @return java.lang.String
     */
    public java.lang.String getGhr()
    {
        return this.ghr;
    }

    /**
     * Set the value of the GHR column.
     * @param ghr
     */
    public void setGhr(java.lang.String ghr)
    {
        this.ghr = ghr;
    }

    /**
     * Return the value of the OMIM column.
     * @return java.lang.String
     */
    public java.lang.String getOmim()
    {
        return this.omim;
    }

    /**
     * Set the value of the OMIM column.
     * @param omim
     */
    public void setOmim(java.lang.String omim)
    {
        this.omim = omim;
    }

    /**
     * Return the value of the CONCEPT_ID collection.
     * @return ConceptSemtype
     */
    public java.util.Set getConceptSemtypeSet()
    {
        return this.conceptSemtypeSet;
    }

    /**
     * Set the value of the CONCEPT_ID collection.
     * @param conceptSemtypeSet
     */
    public void setConceptSemtypeSet(java.util.Set conceptSemtypeSet)
    {
        this.conceptSemtypeSet = conceptSemtypeSet;
    }
    
    /**
     * Return the value of the CONCEPT_ID collection.
     * @return ConceptTranslation
     */
    public java.util.Set getConceptTranslationSet()
    {
        return this.conceptTranslationSet;
    }

    /**
     * Set the value of the CONCEPT_ID collection.
     * @param conceptSemtypeSet
     */
    public void setConceptTranslationSet(java.util.Set conceptTranslationSet)
    {
        this.conceptTranslationSet = conceptTranslationSet;
    }
    

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Concept))
            return false;
        Concept that = (Concept) rhs;
        if (this.getConceptId() == null || that.getConceptId() == null)
            return false;
        return (this.getConceptId().equals(that.getConceptId()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int conceptIdValue = this.getConceptId() == null ? 0 : this.getConceptId().hashCode();
            result = result * 37 + conceptIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
