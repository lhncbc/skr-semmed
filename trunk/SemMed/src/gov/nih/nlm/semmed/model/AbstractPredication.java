/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Mar 23 14:58:43 EST 2006 by MyEclipse Hibernate Tool.
 */
package gov.nih.nlm.semmed.model;

import java.io.Serializable;

/**
 * A class that represents a row in the PREDICATION table. 
 * You can customize the behavior of this class by editing the class, {@link Predication()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractPredication 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Long predicationId;

    /** The value of the predicationArgumentSet one-to-many association. */
    private java.util.Set<PredicationArgument> predicationArgumentSet;

    /** The value of the sentencePredicationSet one-to-many association. */
    private java.util.Set sentencePredicationSet;

    /** The value of the simple predicate property. */
    private java.lang.String predicate;

    /** The value of the simple type property. */
    private java.lang.String type;

    /**
     * Simple constructor of AbstractPredication instances.
     */
    public AbstractPredication()
    {
    }

    /**
     * Constructor of AbstractPredication instances given a simple primary key.
     * @param predicationId
     */
    public AbstractPredication(java.lang.Long predicationId)
    {
        this.setPredicationId(predicationId);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Long
     */
    public java.lang.Long getPredicationId()
    {
        return predicationId;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param predicationId
     */
    public void setPredicationId(java.lang.Long predicationId)
    {
        this.hashValue = 0;
        this.predicationId = predicationId;
    }

    /**
     * Return the value of the PREDICATE column.
     * @return java.lang.String
     */
    public java.lang.String getPredicate()
    {
        return this.predicate;
    }

    /**
     * Set the value of the PREDICATE column.
     * @param predicate
     */
    public void setPredicate(java.lang.String predicate)
    {
        this.predicate = predicate;
    }

    /**
     * Return the value of the TYPE column.
     * @return java.lang.String
     */
    public java.lang.String getType()
    {
        return this.type;
    }

    /**
     * Set the value of the TYPE column.
     * @param type
     */
    public void setType(java.lang.String type)
    {
        this.type = type;
    }

    /**
     * Return the value of the PREDICATION_ID collection.
     * @return PredicationArgument
     */
    public java.util.Set<PredicationArgument> getPredicationArgumentSet()
    {
        return this.predicationArgumentSet;
    }

    /**
     * Set the value of the PREDICATION_ID collection.
     * @param predicationArgumentSet
     */
    public void setPredicationArgumentSet(java.util.Set<PredicationArgument> predicationArgumentSet)
    {
        this.predicationArgumentSet = predicationArgumentSet;
    }

    /**
     * Return the value of the PREDICATION_ID collection.
     * @return SentencePredication
     */
    public java.util.Set getSentencePredicationSet()
    {
        return this.sentencePredicationSet;
    }

    /**
     * Set the value of the PREDICATION_ID collection.
     * @param sentencePredicationSet
     */
    public void setSentencePredicationSet(java.util.Set sentencePredicationSet)
    {
        this.sentencePredicationSet = sentencePredicationSet;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Predication))
            return false;
        Predication that = (Predication) rhs;
        if (this.getPredicationId() == null || that.getPredicationId() == null)
            return false;
        return (this.getPredicationId().equals(that.getPredicationId()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int predicationIdValue = this.getPredicationId() == null ? 0 : this.getPredicationId().hashCode();
            result = result * 37 + predicationIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
