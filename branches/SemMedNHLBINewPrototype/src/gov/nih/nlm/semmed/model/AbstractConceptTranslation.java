/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Tue May 23 16:43:31 EDT 2006 by MyEclipse Hibernate Tool.
 */
package gov.nih.nlm.semmed.model;

import java.io.Serializable;

/**
 * A class that represents a row in the CONCEPT_TRANSLATION table.
 * You can customize the behavior of this class by editing the class, {@link ConceptTranslation()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractConceptTranslation
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Long conceptTranslationId;

    /** The value of the concept association. */
    private Concept concept;

    /** The value of the simple language property. */
    private java.lang.String language;

    /** The value of the simple translation property. */
    private java.lang.String translation;

    /**
     * Simple constructor of AbstractConceptTranslation instances.
     */
    public AbstractConceptTranslation()
    {
    }

    /**
     * Constructor of AbstractConceptTranslation instances given a simple primary key.
     * @param conceptTranslationId
     */
    public AbstractConceptTranslation(java.lang.Long conceptTranslationId)
    {
        this.setConceptTranslationId(conceptTranslationId);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Long
     */
    public java.lang.Long getConceptTranslationId()
    {
        return conceptTranslationId;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param conceptTranslationId
     */
    public void setConceptTranslationId(java.lang.Long conceptTranslationId)
    {
        this.hashValue = 0;
        this.conceptTranslationId = conceptTranslationId;
    }

    /**
     * Return the value of the CONCEPT_ID column.
     * @return Concept
     */
    public Concept getConcept()
    {
        return this.concept;
    }

    /**
     * Set the value of the CONCEPT_ID column.
     * @param concept
     */
    public void setConcept(Concept concept)
    {
        this.concept = concept;
    }

    /**
     * Return the value of the LANGUAGE column.
     * @return java.lang.String
     */
    public java.lang.String getLanguage()
    {
        return this.language;
    }

    /**
     * Set the value of the LANGUAGE column.
     * @param language
     */
    public void setLanguage(java.lang.String language)
    {
        this.language = language;
    }

    /**
     * Return the value of the TRANSLATION column.
     * @return java.lang.String
     */
    public java.lang.String getTranslation()
    {
        return this.translation;
    }

    /**
     * Set the value of the TRANSLATION column.
     * @param translation
     */
    public void setTranslation(java.lang.String translation)
    {
        this.translation = translation;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof ConceptTranslation))
            return false;
        ConceptTranslation that = (ConceptTranslation) rhs;
        if (this.getConceptTranslationId() == null || that.getConceptTranslationId() == null)
            return false;
        return (this.getConceptTranslationId().equals(that.getConceptTranslationId()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int conceptTranslationIdValue = this.getConceptTranslationId() == null ? 0 : this.getConceptTranslationId().hashCode();
            result = result * 37 + conceptTranslationIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
