/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Tue Feb 07 14:23:50 EST 2006 by MyEclipse Hibernate Tool.
 */
package gov.nih.nlm.semmed.model;

import java.io.Serializable;

/**
 * A class that represents a row in the CONCEPT_SEMTYPE table. 
 * You can customize the behavior of this class by editing the class, {@link ConceptSemtype()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractConceptSemtype 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Long conceptSemtypeId;

    /** The value of the concept association. */
    private Concept concept;

    /** The value of the predicationSet one-to-many association. */
    private java.util.Set predicationSet;

    /** The value of the predication1Set one-to-many association. */
    private java.util.Set predication1Set;

    /** The value of the simple semtype property. */
    private java.lang.String semtype;
    
    /** The value of the simple novel property. */
    private java.lang.String novel;      

    /**
     * Simple constructor of AbstractConceptSemtype instances.
     */
    public AbstractConceptSemtype()
    {
    }

    /**
     * Constructor of AbstractConceptSemtype instances given a simple primary key.
     * @param conceptSemtypeId
     */
    public AbstractConceptSemtype(java.lang.Long conceptSemtypeId)
    {
        this.setConceptSemtypeId(conceptSemtypeId);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Integer
     */
    public java.lang.Long getConceptSemtypeId()
    {
        return conceptSemtypeId;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param conceptSemtypeId
     */
    public void setConceptSemtypeId(java.lang.Long conceptSemtypeId)
    {
        this.hashValue = 0;
        this.conceptSemtypeId = conceptSemtypeId;
    }

    /**
     * Return the value of the CONCEPT_ID column.
     * @return Concept
     */
    public Concept getConcept()
    {
        return this.concept;
    }

    /**
     * Set the value of the CONCEPT_ID column.
     * @param concept
     */
    public void setConcept(Concept concept)
    {
        this.concept = concept;
    }

    /**
     * Return the value of the SEMTYPE column.
     * @return java.lang.String
     */
    public java.lang.String getSemtype()
    {
        return this.semtype;
    }

    /**
     * Set the value of the SEMTYPE column.
     * @param semtype
     */
    public void setSemtype(java.lang.String semtype)
    {
        this.semtype = semtype;
    }
    
    /**
     * Return the value of the NOVEL column.
     * @return java.lang.String
     */
    public java.lang.String getNovel()
    {
        return this.novel;
    }

    /**
     * Set the value of the NOVEL column.
     * @param novel
     */
    public void setNovel(java.lang.String novel)
    {
        this.novel = novel;
    }       

    /**
     * Return the value of the SUBJECT_SEMTYPE_ID collection.
     * @return Predication
     */
    public java.util.Set getPredicationSet()
    {
        return this.predicationSet;
    }

    /**
     * Set the value of the SUBJECT_SEMTYPE_ID collection.
     * @param predicationSet
     */
    public void setPredicationSet(java.util.Set predicationSet)
    {
        this.predicationSet = predicationSet;
    }

    /**
     * Return the value of the OBJECT_SEMTYPE_ID collection.
     * @return Predication
     */
    public java.util.Set getPredication1Set()
    {
        return this.predication1Set;
    }

    /**
     * Set the value of the OBJECT_SEMTYPE_ID collection.
     * @param predication1Set
     */
    public void setPredication1Set(java.util.Set predication1Set)
    {
        this.predication1Set = predication1Set;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof ConceptSemtype))
            return false;
        ConceptSemtype that = (ConceptSemtype) rhs;
        if (this.getConceptSemtypeId() == null || that.getConceptSemtypeId() == null)
            return false;
        return (this.getConceptSemtypeId().equals(that.getConceptSemtypeId()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int conceptSemtypeIdValue = this.getConceptSemtypeId() == null ? 0 : this.getConceptSemtypeId().hashCode();
            result = result * 37 + conceptSemtypeIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}

